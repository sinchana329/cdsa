#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

bool isValid(char *s) {
    int n = strlen(s);
    char stack[n];  // Stack to store opening brackets
    int top = -1;    // Initialize stack pointer

    for (int i = 0; i < n; i++) {
        char ch = s[i];

        // Push the opening brackets onto the stack
        if (ch == '(' || ch == '{' || ch == '[') {
            stack[++top] = ch;
        } 
        // If it's a closing bracket, check if it matches the top of the stack
        else {
            if (top == -1) {
                return false;  // Stack is empty, no matching opening bracket
            }

            char topElement = stack[top--];

            if ((ch == ')' && topElement != '(') || 
                (ch == '}' && topElement != '{') || 
                (ch == ']' && topElement != '[')) {
                return false;  // Mismatched brackets
            }
        }
    }

    // If the stack is empty, all opening brackets have been matched
    return top == -1;
}

int main() {
    char s[] = "()[]{}";
    if (isValid(s)) {
        printf("Valid\n");
    } else {
        printf("Invalid\n");
    }

    return 0;
}
